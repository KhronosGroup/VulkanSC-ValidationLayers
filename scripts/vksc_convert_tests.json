{
    "disable": [
        {
            "reason": "This test case are replaced with Vulkan SC specific ones",
            "cases": [
                "VkLayerTest.SpecLinks",
                "NegativeImage.ImageMisc",
                "PositiveInstance.ValidationInstanceExtensions",
                "NegativeMemory.BindMemory",
                "NegativeObjectLifetime.LeakAnObject",
                "NegativePipeline.MissingEntrypoint",
                "NegativePipeline.NullStagepName",
                "NegativeRenderPass.IncompatibleFramebuffer",
                "NegativeRenderPass.FramebufferIncompatibleNoHandle",
                "NegativeShaderSpirv.CodeSize",
                "NegativeShaderSpirv.Magic"
            ]
        },
        {
            "reason": "This test case are not relevant for Vulkan SC",
            "cases": [
                "VkPositiveLayerTest.ExtensionsInCreateInstance",
                "NegativeImage.GetPhysicalDeviceImageFormatProperties"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: assumes availability of pre-Vulkan 1.2 functionality",
            "cases": [
                "VkLayerTest.UnsupportedPnextApiVersion",
                "VkLayerTest.DeviceFeature2AndVertexAttributeDivisorExtensionUnenabled",
                "VkLayerTest.UsePnextOnlyStructWithoutExtensionEnabled",
                "VkLayerTest.RequiredPromotedFeaturesExtensions",
                "VkLayerTest.MissingExtensionPhysicalDeviceProperties",
                "VkLayerTest.ExtensionXmlDependsLogic3",
                "VkPositiveLayerTest.Vulkan12FeaturesBufferDeviceAddress",
                "VkPositiveLayerTest.UseInteractionApi2",
                "NegativeDescriptorIndexing.SetLayoutWithoutExtension",
                "NegativePipeline.ShaderDrawParametersNotEnabled10",
                "NegativeSampler.MirrorClampToEdgeNotEnabled",
                "PositiveSampler.SamplerMirrorClampToEdgeWithoutFeature",
                "PositiveSampler.SamplerMirrorClampToEdgeWithoutFeature12",
                "NegativeShaderSpirv.NoScalarBlockLayout10",
                "NegativeShaderSpirv.NoUniformBufferStandardLayout10",
                "PositiveShaderSpirv.ShaderDrawParametersWithoutFeature"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: allocation callbacks",
            "cases": [
                "VkLayerTest.InvalidAllocationCallbacks",
                "NegativeInstanceless.DestroyInstanceAllocationCallbacksCompatibility"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: best practices layers",
            "cases": [
                "VkBestPracticesLayerTest.*",
                "VkPositiveBestPracticesLayerTest.*",
                "VkAmdBestPracticesLayerTest.*",
                "VkArmBestPracticesLayerTest.*",
                "VkNvidiaBestPracticesLayerTest.*"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: derivative pipelines",
            "cases": [
                "NegativePipeline.CreateComputesPipelineWithBadBasePointer",
                "NegativePipeline.CreateGraphicsPipelineWithBadBasePointer",
                "NegativePipeline.GraphicsPipelineWithBadBasePointer"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: GPU AV",
            "cases": [
                "NegativeGpuAV.*",
                "PositiveGpuAV.*",
                "PositiveGpuAVShaderObject.*",
                "NegativeDebugPrintf.*"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: portability subset",
            "cases": [
                "VkPortabilitySubsetTest.*"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: split-instance bind regions",
            "cases": [
                "VkLayerTest.InvalidImageCreateFlagWithPhysicalDeviceCount",
                "NegativeImage.ImageSplitInstanceBindRegionCount"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: sparse resources",
            "cases": [
                "NegativeImage.SparseResidencyAliased",
                "NegativeSparseBuffer.*",
                "PositiveSparseBuffer.*",
                "NegativeSparseImage.*",
                "PositiveSparseImage.*"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: vkFreeMemory",
            "cases": [
                "NegativeDescriptors.DescriptorImageUpdateNoMemoryBound",
                "PositiveMemory.BindImageMemoryMultiThreaded",
                "NegativeObjectLifetime.CmdBarrierBufferDestroyed",
                "NegativeObjectLifetime.CmdBarrierImageDestroyed",
                "NegativeObjectLifetime.Sync2CmdBarrierBufferDestroyed",
                "NegativeObjectLifetime.Sync2CmdBarrierImageDestroyed",
                "NegativeObjectLifetime.FramebufferAttachmentMemoryFreed",

                "@Note: Allocates 10000 transient device memory objects unnecessarily",
                "PositiveSyncObject.WaitTimelineSemThreadRace"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: vkDestroyQueryPool",
            "cases": [
                "NegativeObjectLifetime.DescriptorPoolInUseDestroyedSignaled",
                "NegativeQuery.CmdBufferQueryPoolDestroyed",
                "NegativeQuery.PoolInUseDestroyedSignaled",
                "NegativeQuery.DestroyActiveQueryPool",
                "NegativeQuery.DestroyWithoutQueryPool",
                "NegativeQuery.HostResetQueryPool"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: vkMergePipelineCaches",
            "cases": [
                "NegativePipeline.MergePipelineCachesInvalidDst"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: vkTrimCommandBuffer",
            "cases": [
                "VkPositiveLayerTest.GetDevProcAddrExtensions"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_KHR_push_descriptor",
            "cases": [
                "NegativePushDescriptor.SetLayoutWithoutExtension"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_KHR_win32_surface",
            "cases": [
                "NegativeWsi.CreatingWin32Surface"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_EXT_debug_marker",
            "cases": [
                "NegativeDebugExtensions.DebugMarkerName",
                "NegativeDebugExtensions.DebugMarkerSetObject",
                "NegativeDebugExtensions.DebugMarkerSetUtils"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_EXT_debug_report",
            "cases": [
                "NegativeParent.Instance_DebugReportCallback"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_EXT_graphics_pipeline_library",
            "cases": [
                "NegativeGraphicsLibrary.*",
                "PositiveGraphicsLibrary.*"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_EXT_layer_settings",
            "cases": [
                "VkLayerTest.CustomStypeStructIntegerArray",
                "VkLayerTest.CustomStypeStructString",
                "VkLayerTest.CustomStypeStructStringArray",
                "VkLayerTest.DuplicateMessageLimit",
                "VkLayerTest.VuidFilterHexInt",
                "VkLayerTest.VuidFilterInt",
                "VkLayerTest.VuidIdFilterString"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_EXT_tooling_info",
            "cases": [
                "PositiveTooling.InfoExt"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_EXT_validation_cache",
            "cases": [
                "VkLayerTest.ValidationCacheTestBadMerge"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_NV_dedicated_allocation",
            "cases": [
                "NegativeMemory.MemoryAllocatepNextChain"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: VK_QCOM_render_pass_shader_resolve",
            "cases": [
                "NegativePipeline.SubpassRasterizationSamples"
            ]
        },
        {
            "reason": "Not supported in Vulkan SC: miscellaneous Vulkan-only extensions",
            "cases": [
                "NegativeInstanceless.ExtensionStructsWithoutExtensions",
                "NegativePipeline.CreateFlags",
                "NegativePipeline.CreateFlagsCompute"
            ]
        },
        {
            "reason": "Uses too many objects",
            "cases": [
                "@Note: This test case assumes 10000 descriptor sets can be created from a single pool",
                "PositiveThreading.DebugObjectNames"
            ]
        }
    ],
    "modify": [
        {
            "reason": "This test case requires SPIR-V debug information",
            "cases": [
                "NegativeAtomic.Float",
                "NegativeAtomic.Float2",
                "NegativeAtomic.FragmentStoresAndAtomicsFeatureDisable",
                "NegativeAtomic.ImageInt64",
                "NegativeAtomic.ImageInt64Drawtime32",
                "NegativeAtomic.ImageInt64Drawtime64",
                "NegativeAtomic.Int64",
                "NegativeAtomic.InvalidStorageOperation",
                "NegativeAtomic.VertexStoresAndAtomicsFeatureDisable",
                "NegativeCommand.DrawTimeImageComponentTypeMismatchWithPipeline",
                "NegativeCommand.DrawTimeImageViewTypeMismatchWithPipeline",
                "NegativeCommand.DrawTimeImageViewTypeMismatchWithPipelineFunction",
                "NegativeCommand.FilterCubicSamplerInCmdDraw",
                "NegativeDescriptors.CmdBufferDescriptorSetBufferDestroyed",
                "NegativeDescriptors.CmdBufferDescriptorSetImageSamplerDestroyed",
                "NegativeDescriptors.DescriptorPoolInUseResetSignaled",
                "NegativeDescriptors.DescriptorReadFromWriteAttachment",
                "NegativeDescriptors.DescriptorSetCompatibility",
                "NegativeDescriptors.DescriptorSetSamplerDestroyed",
                "NegativeDescriptors.DescriptorWriteFromReadAttachment",
                "NegativeDescriptors.DispatchWithUnboundSet",
                "NegativeDescriptors.DrawDescriptorSetBufferDestroyed",
                "NegativeDescriptors.DynamicOffsetWithNullBuffer",
                "NegativeDescriptors.ImageDescriptorLayoutMismatch",
                "NegativeDescriptors.ImageSubresourceOverlapBetweenAttachmentsAndDescriptorSets",
                "NegativeDescriptors.ImageSubresourceOverlapBetweenRenderPassAndDescriptorSets",
                "NegativeDescriptors.WriteDescriptorSetConsecutiveUpdates",
                "NegativeDynamicState.VertexInputLocationMissing",
                "NegativeFragmentShadingRate.PrimitiveFragmentShadingRateWriteMultiViewportLimitDynamic",
                "NegativeFragmentShadingRate.PrimitiveWriteMultiViewportLimit",
                "NegativeGeometryTessellation.BuiltinBlockOrderMismatchVsGs",
                "NegativeGeometryTessellation.BuiltinBlockSizeMismatchVsGs",
                "NegativeGeometryTessellation.GeometryShaderEnabled",
                "NegativeGeometryTessellation.IncompatiblePrimitiveTopology",
                "NegativeGeometryTessellation.IncompatibleTessGeomPrimitiveTopology",
                "NegativeGeometryTessellation.MaxGeometryInputOutputComponents",
                "NegativeGeometryTessellation.MaxGeometryInstanceVertexCount",
                "NegativeGeometryTessellation.MaxTessellationControlInputOutputComponents",
                "NegativeGeometryTessellation.MaxTessellationEvaluationInputOutputComponents",
                "NegativeGeometryTessellation.MismatchedTessellationExecutionModes",
                "NegativeGeometryTessellation.PipelineTessellationMissingPointSize",
                "NegativeGeometryTessellation.PipelineTessellationPointSize",
                "NegativeGeometryTessellation.PointSizeGeomShaderDontWrite",
                "NegativeGeometryTessellation.PointSizeGeomShaderWrite",
                "NegativeGeometryTessellation.TessellationPatchDecorationMismatch",
                "NegativeGeometryTessellation.TessellationShaderEnabled",
                "NegativeImage.ComputeImageLayout",
                "NegativeImage.ComputeImageLayout11",
                "NegativeMultiview.UnboundResourcesAfterBeginRenderPassAndNextSubpass",
                "NegativeObjectLifetime.BufferViewInUseDestroyedSignaled",
                "NegativeObjectLifetime.CmdBufferBufferViewDestroyed",
                "NegativeObjectLifetime.ImageViewInUseDestroyedSignaled",
                "NegativeObjectLifetime.SamplerInUseDestroyedSignaled",
                "NegativePipeline.NotCompatibleForSet",
                "NegativePipeline.ShaderDrawParametersNotEnabled11",
                "NegativePipelineLayout.DescriptorNotAccessible",
                "NegativePipelineLayout.DescriptorTypeMismatch",
                "NegativePipelineLayout.DescriptorTypeMismatchCompute",
                "NegativePipelineLayout.DescriptorTypeMismatchNonCombinedImageSampler",
                "NegativePipelineLayout.MissingDescriptor",
                "NegativePipelineLayout.UniformBlockNotProvided",
                "NegativePipelineTopology.PointSize",
                "NegativeProtectedMemory.MixingProtectedResources",
                "NegativeSampler.CustomBorderColorFormatUndefined",
                "NegativeSampler.UnnormalizedCoordinatesCombinedSampler",
                "NegativeSampler.UnnormalizedCoordinatesCopyObject",
                "NegativeSampler.UnnormalizedCoordinatesInBoundsAccess",
                "NegativeSampler.UnnormalizedCoordinatesSeparateSampler",
                "NegativeSampler.UnnormalizedCoordinatesSeparateSamplerSharedImage",
                "NegativeSampler.UnnormalizedCoordinatesSeparateSamplerSharedSampler",
                "NegativeShaderCompute.CmdDispatchExceedLimits",
                "NegativeShaderCompute.SharedMemoryBooleanOverLimit",
                "NegativeShaderCompute.SharedMemoryOverLimit",
                "NegativeShaderCompute.SharedMemorySpecConstantDefault",
                "NegativeShaderCompute.SharedMemorySpecConstantSet",
                "NegativeShaderCompute.WorkgroupMemoryExplicitLayout",
                "NegativeShaderCompute.WorkGroupSizeConstantDefault",
                "NegativeShaderCompute.WorkGroupSizeSpecConstant",
                "NegativeShaderCompute.WorkGroupSizeSpecConstantDefault",
                "NegativeShaderImageAccess.ComponentTypeMismatchFunctionTwoArgs",
                "NegativeShaderImageAccess.FunctionOpImage",
                "NegativeShaderImageAccess.MultisampleMismatchWithPipeline",
                "NegativeShaderImageAccess.NonMultisampleMismatchWithPipeline",
                "NegativeShaderImageAccess.UnnormalizedCoordinatesFunction",
                "NegativeShaderInterface.*",
                "NegativeShaderLimits.MinAndMaxTexelGatherOffset",
                "NegativeShaderLimits.MinAndMaxTexelOffset",
                "NegativeShaderPushConstants.DrawWithoutUpdate",
                "NegativeShaderPushConstants.MultipleEntryPoint",
                "NegativeShaderPushConstants.NotDeclared",
                "NegativeShaderPushConstants.NotInLayout",
                "NegativeShaderSpirv.ConservativeRasterizationPostDepthCoverage",
                "NegativeShaderSpirv.DemoteToHelperInvocation",
                "NegativeShaderSpirv.DescriptorCountConstant",
                "NegativeShaderSpirv.DeviceMemoryScope",
                "NegativeShaderSpirv.DynamicUniformIndex",
                "NegativeShaderSpirv.FragmentShaderInterlockEnabled",
                "NegativeShaderSpirv.InvalidExtension",
                "NegativeShaderSpirv.NoScalarBlockLayout12",
                "NegativeShaderSpirv.NoUniformBufferStandardLayout12",
                "NegativeShaderSpirv.QueueFamilyMemoryScope",
                "NegativeShaderSpirv.ReadShaderClock",
                "NegativeShaderSpirv.ShaderModuleCheckCapability",
                "NegativeShaderSpirv.ShaderNotEnabled",
                "NegativeShaderSpirv.SpecializationApplied",
                "NegativeShaderSpirv.SpecializationSizeMismatch",
                "NegativeShaderSpirv.SpecializationSizeZero",
                "NegativeShaderSpirv.Storage8and16bitCapability",
                "NegativeShaderSpirv.Storage8and16bitFeatures",
                "NegativeShaderStorageImage.*",
                "NegativeShaderStorageTexel.*",
                "NegativeSubgroup.ExtendedTypesDisabled",
                "NegativeSubpass.InputAttachmentMissing",
                "NegativeSubpass.InputAttachmentMissingArray",
                "NegativeSubpass.InputAttachmentSharingVariable",
                "NegativeSubpass.SubpassInputNotBoundDescriptorSet",
                "NegativeSubpass.SubpassInputWithoutFormat",
                "NegativeSyncVal.CmdDispatchDrawHazards",
                "NegativeSyncVal.RenderPassAsyncHazard",
                "NegativeSyncVal.StageAccessExpansion",
                "NegativeSyncVal.WriteOnlyBufferWriteHazard",
                "NegativeSyncVal.WriteOnlyImageWriteHazard",
                "NegativeVertexInput.Attribute64bitInputAttribute",
                "NegativeVertexInput.Attribute64bitShaderInput",
                "NegativeVertexInput.Attribute64bitUnusedComponent",
                "NegativeVertexInput.AttributeLocationMismatch",
                "NegativeVertexInput.AttributeNotConsumed",
                "NegativeVertexInput.AttributeNotProvided",
                "NegativeVertexInput.AttributeStructTypeBlockLocation",
                "NegativeVertexInput.AttributeStructTypeBlockLocation64bit",
                "NegativeVertexInput.AttributeStructTypeFirstLocation",
                "NegativeVertexInput.AttributeStructTypeSecondLocation",
                "NegativeVertexInput.AttributeTypeMismatch",
                "NegativeVertexInput.AttributeTypeMismatchDynamic",
                "NegativeYcbcr.DrawConstOffset",
                "NegativeYcbcr.DrawFetch"
            ],
            "patch": [
                "RequiresSpvDebugInfo()"
            ]
        },
        {
            "reason": "This test case uses too much stack space to be compatible with QNX",
            "cases": [
                "NegativeSampler.CustomBorderColor"
            ],
            "patch": [
                "SkipOnQNX()"
            ]
        },
        {
            "reason":
                "This test case triggers an unexpected VUID due to reliance on the VK_QCOM_render_pass_transform extension that is not available in Vulkan SC",
            "cases": [
                "NegativeFragmentShadingRate.Attachments"
            ],
            "patch": [
                "m_errorMonitor->SetAllowedFailureMsg(\"VUID-VkRenderPassCreateInfo2-flags-zerobitmask\")"
            ]
        }
    ]
}
